{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Web 3.0 Netflix\\\\Netflix-Starter\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport { Logo } from \"../images/Netflix\";\nimport { ConnectButton, Icon, TabList, Tab, Button, Modal, useNotification } from \"web3uikit\";\nimport { movies } from '../helpers/library';\nimport { useState } from \"react\";\nimport { useMoralis } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [selectedFilm, setSelectedFilm] = useState();\n  const [myMovies, setMovies] = useState();\n  const {\n    isAuthenticated,\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function fetchMyList() {\n      try {\n        const theList = await Moralis.Cloud.run(\"getMyList\", {\n          addrs: account\n        });\n        const filterdA = movies.filter(function (e) {\n          return theList.indexOf(e.Name) > -1;\n        });\n        setMovies(filterdA);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    fetchMyList();\n  }, [account]);\n  const dispatch = useNotification();\n\n  const handleNewNotification = () => {\n    dispatch({\n      type: \"error\",\n      message: \"Pleaser Connect Your Wallet\",\n      title: \"Not Authenticated\",\n      position: \"topL\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        fill: \"#ffffff\",\n        size: 24,\n        svg: \"bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topBanner\",\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        defaultActiveKey: 1,\n        tabStyle: \"bar\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 1,\n          tabName: \"Movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scene\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movies[0].Scene,\n              className: \"sceneImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"sceneLogo\",\n              src: movies[0].Logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sceneDesc\",\n              children: movies[0].Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playButton\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                icon: \"chevronRightX2\",\n                text: \"Play\",\n                theme: \"secondary\",\n                type: \"button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"plus\",\n                text: \"Add to My List\",\n                theme: \"translucent\",\n                type: \"button\",\n                onClick: () => console.log(myMovies)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thumbs\",\n            children: movies && movies.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.Thumnbnail,\n                className: \"thumbnail\",\n                onClick: () => {\n                  setSelectedFilm(e);\n                  setVisible(true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 51\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 2,\n          tabName: \"Series\",\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 3,\n          tabName: \"MyList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          onCloseButtonPressed: () => setVisible(false),\n          isVisible: visible,\n          hasFooter: false,\n          width: \"1000px\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedFilm.Scene,\n              className: \"modalImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"modalLogo\",\n              src: selectedFilm.Logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modalPlayButton\",\n              children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/player\",\n                  state: selectedFilm.Movie,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    icon: \"chevronRightX2\",\n                    text: \"Play\",\n                    theme: \"secondary\",\n                    type: \"button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"plus\",\n                  text: \"Add to My List\",\n                  theme: \"translucent\",\n                  type: \"button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"chevronRightX2\",\n                  text: \"Play\",\n                  theme: \"secondary\",\n                  type: \"button\",\n                  onClick: handleNewNotification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"plus\",\n                  text: \"Add to My List\",\n                  theme: \"translucent\",\n                  type: \"button\",\n                  onClick: handleNewNotification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"moviesInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: selectedFilm.Year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 71\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: selectedFilm.Duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 71\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 61\n                }, this), selectedFilm.Description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detailedInfo\",\n                children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"deets\",\n                  children: selectedFilm.Genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 61\n                }, this), \"Actors:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"deets\",\n                  children: selectedFilm.Actors\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"he65g/ZGTpZrSb24YjdXLmsVMwM=\", false, function () {\n  return [useMoralis, useNotification];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Web 3.0 Netflix/Netflix-Starter/src/pages/Home.js"],"names":["React","useEffect","Link","Logo","ConnectButton","Icon","TabList","Tab","Button","Modal","useNotification","movies","useState","useMoralis","Home","visible","setVisible","selectedFilm","setSelectedFilm","myMovies","setMovies","isAuthenticated","Moralis","account","fetchMyList","theList","Cloud","run","addrs","filterdA","filter","e","indexOf","Name","error","console","dispatch","handleNewNotification","type","message","title","position","Scene","Description","log","map","Thumnbnail","Movie","Year","Duration","Genre","Actors"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport { Logo } from \"../images/Netflix\";\r\nimport { ConnectButton, Icon ,TabList, Tab ,Button, Modal, useNotification } from \"web3uikit\";\r\nimport { movies } from '../helpers/library';\r\nimport { useState } from \"react\";\r\nimport { useMoralis } from 'react-moralis';\r\n\r\n\r\nconst Home = () => {\r\n          const [ visible, setVisible] = useState(false);\r\n          const [ selectedFilm, setSelectedFilm] = useState();\r\n          const [ myMovies, setMovies] = useState();\r\n          const { isAuthenticated, Moralis, account } = useMoralis();\r\n\r\n          useEffect(() => {\r\n                    async function fetchMyList() {\r\n                \r\n                \r\n                      try {\r\n                        const theList = await Moralis.Cloud.run(\"getMyList\", { addrs: account });\r\n                \r\n                        const filterdA = movies.filter(function (e) {\r\n                          return theList.indexOf(e.Name) > -1;\r\n                        });\r\n                \r\n                        setMovies(filterdA);\r\n                        \r\n                      } catch (error) {\r\n                        console.error(error)\r\n                      }\r\n                    }\r\n                \r\n                    fetchMyList();\r\n                  }, [account]);\r\n\r\n\r\n          const dispatch = useNotification();\r\n          const handleNewNotification = () => {\r\n                    dispatch({\r\n                              type:\"error\",\r\n                              message:\"Pleaser Connect Your Wallet\",\r\n                              title:\"Not Authenticated\",\r\n                              position:\"topL\"\r\n                    })\r\n          }\r\n\r\nreturn(\r\n  <>\r\n  <div className=\"logo\">\r\n            <Logo />\r\n  </div>\r\n  <div className=\"connect\">\r\n  <Icon fill=\"#ffffff\" size={24} svg=\"bell\"/>\r\n            <ConnectButton />\r\n  </div>\r\n  <div className=\"topBanner\">\r\n          <TabList defaultActiveKey={1} tabStyle=\"bar\">\r\n                    <Tab tabKey={1} tabName={\"Movies\"}>\r\n                              <div className=\"scene\">\r\n                                        <img src={movies[0].Scene} className=\"sceneImg\"></img>\r\n                                        <img className=\"sceneLogo\" src={movies[0].Logo}></img>\r\n                                        <p className=\"sceneDesc\">{movies[0].Description}</p>\r\n                                        <div className=\"playButton\">\r\n                                        <Button\r\n                                        icon = \"chevronRightX2\"\r\n                                        text=\"Play\"\r\n                                        theme=\"secondary\"\r\n                                        type=\"button\"\r\n                                        />\r\n                                        <Button\r\n                                        icon = \"plus\"\r\n                                        text=\"Add to My List\"\r\n                                        theme=\"translucent\"\r\n                                        type=\"button\"\r\n                                        onClick={() => console.log(myMovies)}\r\n                                        />\r\n                                        </div>\r\n                              </div>\r\n\r\n                              <div className=\"title\">\r\n                                        Movies\r\n                              </div>\r\n                              <div className=\"thumbs\">\r\n                                        {movies &&\r\n                                        movies.map((e) => {\r\n                                                  return(\r\n                                                  <img\r\n                                                  src = {e.Thumnbnail}\r\n                                                  className=\"thumbnail\"\r\n                                                  onClick={() => {\r\n                                                            setSelectedFilm(e);\r\n                                                            setVisible(true);\r\n                                                  }}\r\n                                                  >\r\n                                                  </img>\r\n                                                  )\r\n                                        })\r\n                                        }\r\n                              </div>\r\n\r\n\r\n                    </Tab>\r\n                    <Tab tabKey={2} tabName={\"Series\"} isDisabled={true}></Tab>\r\n                    <Tab tabKey={3} tabName={\"MyList\"}></Tab>\r\n          </TabList>\r\n          {selectedFilm && (\r\n                    <div className=\"modal\">\r\n                              <Modal\r\n                              onCloseButtonPressed ={() => setVisible(false)}\r\n                              isVisible={visible}\r\n                              hasFooter={false}\r\n                              width=\"1000px\"\r\n                              >\r\n                              <div className=\"modalContent\">\r\n                              <img src={selectedFilm.Scene} className=\"modalImg\"></img>\r\n                              <img className=\"modalLogo\" src={selectedFilm.Logo}></img>\r\n                              <div className=\"modalPlayButton\">\r\n                                    {isAuthenticated ? (\r\n                                        <>\r\n                                        <Link to=\"/player\" state={selectedFilm.Movie}>\r\n                                        <Button\r\n                                        icon = \"chevronRightX2\"\r\n                                        text=\"Play\"\r\n                                        theme=\"secondary\"\r\n                                        type=\"button\"\r\n                                        />\r\n                                        </Link>\r\n                                        <Button\r\n                                        icon = \"plus\"\r\n                                        text=\"Add to My List\"\r\n                                        theme=\"translucent\"\r\n                                        type=\"button\"\r\n                                        />\r\n                                        </>\r\n                                    ): (\r\n                                        <>\r\n                                        \r\n                                        <Button\r\n                                        icon = \"chevronRightX2\"\r\n                                        text=\"Play\"\r\n                                        theme=\"secondary\"\r\n                                        type=\"button\"\r\n                                        onClick={handleNewNotification}\r\n                                        />\r\n                                        \r\n                                        <Button\r\n                                        icon = \"plus\"\r\n                                        text=\"Add to My List\"\r\n                                        theme=\"translucent\"\r\n                                        type=\"button\"\r\n                                        onClick={handleNewNotification}\r\n                                        />\r\n                                        </>\r\n                                    )}   \r\n                                        </div>\r\n                                        <div className=\"moviesInfo\">\r\n                                                  <div className=\"description\">\r\n                                                            <div className=\"details\">\r\n                                                                      <span>{selectedFilm.Year}</span>\r\n                                                                      <span>{selectedFilm.Duration}</span>\r\n                                                            </div>\r\n                                                            {selectedFilm.Description}\r\n                                                  </div>\r\n                                                  <div className=\"detailedInfo\">\r\n                                                            Genre:\r\n                                                            <span className=\"deets\">{selectedFilm.Genre}</span>\r\n                                                            <br />\r\n                                                            Actors:\r\n                                                            <span className=\"deets\">{selectedFilm.Actors}</span>\r\n                                                  </div>\r\n                                        </div>\r\n                              </div>\r\n\r\n                              </Modal>\r\n                    </div>\r\n          )}\r\n\r\n\r\n\r\n  </div>\r\n  </>\r\n)\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}